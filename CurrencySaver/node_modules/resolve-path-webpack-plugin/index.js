var glob = require('glob');

function Plugin(options) {
  this.options = options || {};
}

Plugin.prototype.apply = function(compiler) {
  var resolve = compiler.options.resolve;
  var context = this;
  context.alias(resolve);
  compiler.plugin("compilation", function(compilation) {
    var resolve = compilation.options.resolve;
    context.alias(resolve);
  });
}

Plugin.prototype.alias = function (resolve) {
  var root = this.options.root || resolve.root;
  var cwd = this.options.cwd || resolve.cwd || root;
  var target = this.options.target || resolve.target || root;
  var ignore = this.options.ignore || resolve.ignore || [];
  ignore = ['node_modules/**'].concat(ignore);
  var options = {
    root: target,
    ignore: ignore,
    nodir: true,
    cwd: cwd
  };

  var files = glob.sync('**', options);
  for (var i = files.length - 1; i >= 0; i--) {
    var fileName = files[i].replace(/.*\//, '');
    if (this.options.debug) {
      console.log("GLOBBING "+fileName+" AND "+'./'+fileName+" TO "+root + '/' + files[i]);
    }
    resolve.alias[fileName] = root + '/' + files[i];
    resolve.alias['./'+fileName] = root + '/' + files[i];
  }
}

module.exports = Plugin;

